BROKER SCHEMA Procedures

/******************************************************************************
 *  Student Profile Maintenance	    				 	 prepareAuditMessage  *
 *                                                                            *
 *        Author          				   Version             COMMENTS       * 
 *  DocTutorials EdutTech Pvt Ltd     V1.0 (11/06/202)    created the module  *
 ******************************************************************************
 *  Mofication HISTORY                      			                      *    
 *  DATE               			   USER  	                   COMMENTS       * 
 *  ---                			   ---        		           ---            * 
 ******************************************************************************/
CREATE COMPUTE MODULE signupVerifyOtp
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		--pass the secret token from the signup call response OTP_SIGNUP_TOKEN.
		-- Not need and not done now: Set to another hidden value after the successful verification.
		DECLARE inRef REFERENCE TO InputRoot.JSON.Data.gatewayRequest.request;
		--sDECLARE inRefHeader REFERENCE TO InputRoot.JSON.Data.gatewayRequest.header;

		CREATE FIELD OutputRoot.JSON.Data.gatewayResponse;
		DECLARE outRef REFERENCE TO OutputRoot.JSON.Data.gatewayResponse;

		SET OutputRoot.HTTPResponseHeader."requestUUID" = Environment.audit.request_id;
		SET OutputRoot.HTTPResponseHeader."timeStamp"   = CURRENT_TIMESTAMP;
		SET OutputRoot.HTTPResponseHeader."Appversion"  = Environment.Variables.Appversion;
		SET OutputRoot.HTTPResponseHeader."Serreqid"    = Environment.Variables.Serreqid;
		SET OutputRoot.HTTPResponseHeader."Channelid"   = Environment.Variables.Channelid;
		SET OutputRoot.HTTPResponseHeader."Deviceid"    = Environment.Variables.Deviceid;
		SET OutputRoot.HTTPResponseHeader."Modelname"   = Environment.Variables.Modelname;
		SET OutputRoot.HTTPResponseHeader."Os" 		    = Environment.Variables.Os;
		SET OutputRoot.HTTPResponseHeader."Osversion"   = Environment.Variables.Osversion;
		SET OutputRoot.HTTPResponseHeader."Location"    = Environment.Variables.Location;
		SET OutputRoot.HTTPResponseHeader."Ipaddress"   = Environment.Variables.Ipaddress;
		SET OutputRoot.HTTPResponseHeader."Ipaddress"   = Environment.Variables.Ipaddress;
				
		IF (inRef.studentId > '') THEN
		ELSE
			SET outRef.status.isSuccess 	 = false;
			SET outRef.status.statusCode 	 = SUBSTRING(Procedures.getAPIResultCode('ER112') BEFORE '-');
			SET outRef.status.message 	 	 = SUBSTRING(Procedures.getAPIResultCode('ER112') AFTER '-');
			PROPAGATE TO LABEL 'sendHTTPReply';
			RETURN FALSE;
		END IF;				
			
		IF (inRef.otp > '') THEN
		ELSE
			SET outRef.status.isSuccess 	 = false;
			SET outRef.status.statusCode 	 = SUBSTRING(Procedures.getAPIResultCode('ER113') BEFORE '-');
			SET outRef.status.message 	 	 = SUBSTRING(Procedures.getAPIResultCode('ER113') AFTER '-');
			PROPAGATE TO LABEL 'sendHTTPReply';
			RETURN FALSE;
		END IF;
		
		IF (inRef.otpToken > '') THEN
		ELSE
			SET outRef.status.isSuccess 	 = false;
			SET outRef.status.statusCode 	 = SUBSTRING(Procedures.getAPIResultCode('ER114') BEFORE '-');
			SET outRef.status.message 	 	 = SUBSTRING(Procedures.getAPIResultCode('ER114') AFTER '-');
			PROPAGATE TO LABEL 'sendHTTPReply';
			RETURN FALSE;
		END IF;
		
		IF (Environment.Variables.Channelid = 'App') THEN
			IF(inRef.deviceType > '') THEN
			ELSE
				SET outRef.status.isSuccess 	 = false;
				SET outRef.status.statusCode 	 = SUBSTRING(Procedures.getAPIResultCode('ER121') BEFORE '-');
				SET outRef.status.message 	 	 = SUBSTRING(Procedures.getAPIResultCode('ER121') AFTER '-');
				PROPAGATE TO LABEL 'sendHTTPReply';
				RETURN FALSE;
			END IF;
			
			/*IF (inRef.firebaseToken > '') THEN
			ELSE
				SET outRef.status.isSuccess 	 = false;
				SET outRef.status.statusCode 	 = SUBSTRING(Procedures.getAPIResultCode('ER115') BEFORE '-');
				SET outRef.status.message 	 	 = SUBSTRING(Procedures.getAPIResultCode('ER115') AFTER '-');
				PROPAGATE TO LABEL 'sendHTTPReply';
				RETURN FALSE;
			END IF;*/
		END IF;
			
		DECLARE o_result, collegeCountryCode, courseName, specialization, name, mobileNo, emailStatus, mailVerificationToken, universityName, image, email, education, refreshToken, sessionToken, college, state, profileStatus, createdAt, updatedAt CHARACTER;
		DECLARE o_status, ios, emailVerified, android BOOLEAN;
		DECLARE studentId, courseId, countryCode, nextRotationAt, universityId, collegeId, stateId INTEGER;
		
		/*Future encrypt this token*/
		SET sessionToken = generateSessionToken(); 
		SET refreshToken = generateSessionToken();
		
		--https://stackoverflow.com/questions/6526883/base64encoder-cannot-be-resolved
		--https://stackoverflow.com/questions/13992972/how-to-create-a-authentication-token-using-java
		
		SET mailVerificationToken = UUIDASCHAR || UUIDASCHAR;
		/*Add all the validations*/
		CALL dt_profile_create_student_verify_otp(CAST(inRef.studentId AS INTEGER),
												  inRef.otp,
												  inRef.otpToken,
												  inRef.firebaseToken,
												  Environment.Variables.Channelid,
												  Environment.Variables.Location,
												  Environment.Variables.IpAddress,
												  sessionToken,
												  refreshToken,
												  inRef.deviceType,
												  mailVerificationToken,
												  studentId, --Out
												  name, 
												  countryCode,
												  mobileNo,
												  email,
												  education,
												  state,
												  college,
												  profileStatus,
												  emailVerified,
												  createdAt,
												  updatedAt,
												  courseId,
												  courseName,
												  specialization,
												  image,
												  universityId,
												  universityName,
												  collegeId,
										  		  stateId,			  
												  nextRotationAt,
												  collegeCountryCode,												  
												  o_status,
												  o_result);
		IF (o_status = false) THEN
			SET outRef.status.isSuccess 	 = o_status;
			SET outRef.status.statusCode 	 = SUBSTRING(o_result BEFORE '-');
			SET outRef.status.message 	 	 = SUBSTRING(o_result AFTER '-');
			SET OutputRoot.HTTPResponseHeader."timeStamp"   = CURRENT_TIMESTAMP;
		ELSE
			SET emailStatus = sendEmailContent(name, email, mailVerificationToken);
			SET outRef.status.isSuccess 	 = o_status;
			SET outRef.status.statusCode 	 = 'ER000';
			SET outRef.status.message 	 	 = o_result;
			CREATE FIELD OutputRoot.JSON.Data.gatewayResponse.response;
			DECLARE respRef REFERENCE TO OutputRoot.JSON.Data.gatewayResponse.response;
			SET respRef.studentId = studentId;
			IF(studentId = 76270) THEN
			  SET respRef.subscription = true;
			  SET respRef.validUpTo    = '10-03-2025';
			  SET respRef.invoice 	   = 'https://bvrinvoices.s3.ap-south-1.amazonaws.com/reports/Doctutorials_INV_10041.pdf';
			END IF; 	
			SET respRef.countryCode = countryCode;
			SET respRef.mobileNo  = mobileNo;
			SET respRef.email     = LCASE(email);
			SET respRef.name      = name;
			SET respRef.education = education;
			SET respRef.state     = state;
			SET respRef.college   = college;
			SET respRef.profileStatus = profileStatus;
			SET respRef.emailVerified = emailVerified;
			SET respRef.createdAt = createdAt;
			SET respRef.updatedAt = updatedAt;
			SET respRef.courseId = courseId;
			SET respRef.courseName = courseName;
			SET respRef.specialization = specialization;			
			SET respRef.image = image;
			SET respRef.universityId = universityId;
			SET respRef.universityName = universityName;
			SET respRef.collegeId 	   = collegeId;
			SET respRef.stateId		   = stateId;				
			SET respRef.sessionToken   = sessionToken;
			SET respRef.refreshToken   = refreshToken;
			SET respRef.collegeCountryCode   = collegeCountryCode;
			SET respRef.nextRotationAt = nextRotationAt;
			SET OutputRoot.HTTPResponseHeader."timeStamp"   = CURRENT_TIMESTAMP;
		END IF;
		
		PROPAGATE TO LABEL 'sendHTTPReply';			
		RETURN FALSE;
	END;
END MODULE;