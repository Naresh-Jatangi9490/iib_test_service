BROKER SCHEMA Procedures

CREATE COMPUTE MODULE PGetUGCurriculumDashboard
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE inRef REFERENCE TO InputRoot.JSON.Data.gatewayRequest.request;
		
		DECLARE sqlStmt CHARACTER;
		DECLARE i INTEGER 1;

		IF (inRef.studentId > '') THEN
		ELSE
			CREATE FIELD OutputRoot.JSON.Data.gatewayResponse;
			DECLARE outRef REFERENCE TO OutputRoot.JSON.Data.gatewayResponse;
			SET outRef.status.isSuccess 	 = false;
			SET outRef.status.statusCode 	 = SUBSTRING(Procedures.getAPIResultCode('ER102') BEFORE '-');
			SET outRef.status.message 	 	 = SUBSTRING(Procedures.getAPIResultCode('ER102') AFTER '-');
			PROPAGATE TO LABEL 'sendHTTPReply';
			RETURN FALSE;
		END IF;
		
		IF(inRef.courseId = '4' OR inRef.courseId = '5') THEN
	  	ELSE	
			CREATE FIELD OutputRoot.JSON.Data.gatewayResponse;
			DECLARE outRef REFERENCE TO OutputRoot.JSON.Data.gatewayResponse;			
			SET outRef.status.isSuccess 	 = false;
			SET outRef.status.statusCode 	 = SUBSTRING(Procedures.getAPIResultCode('ER126') BEFORE '-');
			SET outRef.status.message 	 	 = SUBSTRING(Procedures.getAPIResultCode('ER126') AFTER '-');
			PROPAGATE TO LABEL 'sendHTTPReply';
			RETURN FALSE;	  		
		END IF;
		
		IF (Environment.Variables.Sessiontoken > '') THEN
		ELSE
			CREATE FIELD OutputRoot.JSON.Data.gatewayResponse;
			DECLARE outRef REFERENCE TO OutputRoot.JSON.Data.gatewayResponse;
			SET outRef.status.isSuccess 	 = false;
			SET outRef.status.statusCode 	 = SUBSTRING(Procedures.getAPIResultCode('ER116') BEFORE '-');
			SET outRef.status.message 	 	 = SUBSTRING(Procedures.getAPIResultCode('ER116') AFTER '-');
			PROPAGATE TO LABEL 'sendHTTPReply';
			RETURN FALSE;
		END IF;
		
		SET OutputRoot.HTTPResponseHeader."requestUUID" = Environment.audit.request_id;
		SET OutputRoot.HTTPResponseHeader."timeStamp"   = CURRENT_TIMESTAMP;
		SET OutputRoot.HTTPResponseHeader."Appversion"  = Environment.Variables.Appversion;
		SET OutputRoot.HTTPResponseHeader."Serreqid"    = Environment.Variables.Serreqid;
		SET OutputRoot.HTTPResponseHeader."Channelid"   = Environment.Variables.Channelid;
		SET OutputRoot.HTTPResponseHeader."Deviceid"    = Environment.Variables.Deviceid;
		SET OutputRoot.HTTPResponseHeader."Modelname"   = Environment.Variables.Modelname;
		SET OutputRoot.HTTPResponseHeader."Os" 		    = Environment.Variables.Os;
		SET OutputRoot.HTTPResponseHeader."Osversion"   = Environment.Variables.Osversion;
		SET OutputRoot.HTTPResponseHeader."Location"    = Environment.Variables.Location;
		SET OutputRoot.HTTPResponseHeader."Ipaddress"   = Environment.Variables.Ipaddress;
		SET OutputRoot.HTTPResponseHeader."Ipaddress"   = Environment.Variables.Ipaddress;

		DECLARE o_result, tokenStatus, redisKey CHARACTER;
		DECLARE o_status BOOLEAN;
			
		--https://stackoverflow.com/questions/6526883/base64encoder-cannot-be-resolved
		--https://stackoverflow.com/questions/13992972/how-to-create-a-authentication-token-using-java
		
		/*Add all the validations*/
		/*CALL dt_validate_session_token(CAST(inRef.studentId AS INTEGER),
							 		   Environment.Variables.Sessiontoken,
							   		   Environment.Variables.Channelid,
							   		   tokenStatus, -- Out
							   		   o_status,
							   		   o_result);												  
		IF (tokenStatus = 'E') THEN
			SET OutputLocalEnvironment.Destination.HTTP.ReplyStatusCode = 403;
		ELSEIF (tokenStatus = 'I') THEN
			SET OutputLocalEnvironment.Destination.HTTP.ReplyStatusCode = 500;
		END IF;
		IF (o_status = false) THEN
			CREATE FIELD OutputRoot.JSON.Data.gatewayResponse;
			DECLARE outRef REFERENCE TO OutputRoot.JSON.Data.gatewayResponse;
			SET outRef.status.isSuccess 	 = o_status;
			SET outRef.status.statusCode 	 = SUBSTRING(o_result BEFORE '-');
			SET outRef.status.message 	 	 = SUBSTRING(o_result AFTER '-');
			SET OutputRoot.HTTPResponseHeader."timeStamp"   = CURRENT_TIMESTAMP;
			PROPAGATE TO LABEL 'sendHTTPReply';
			RETURN FALSE;
		END IF;*/
		
		IF (inRef.courseId = 4) THEN
			SET redisKey = 'DBUGCURR';
		ELSEIF (inRef.courseId = 5) THEN
			SET redisKey = 'DBPGGCURR';
		END IF;
		
		-- converting JSON string into JSON object
		DECLARE messageText CHARACTER;
		SET messageText = getRedisQB(redisKey);
		DECLARE dataAsBit BIT CAST(messageText AS BIT CCSID 1208);
		CREATE LASTCHILD OF OutputRoot DOMAIN 'JSON' PARSE(dataAsBit CCSID 1208);
	    --SET OutputRoot.JSON.Data = getRedisQBVideo('QB');
		PROPAGATE TO LABEL 'sendHTTPReply';			
		RETURN FALSE;
		
	END;
END MODULE;